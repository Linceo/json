// 1、在本地创建一个版本库（即文件夹），通过git init把它变成Git仓库；
// 2、把项目复制到这个文件夹里面，再通过git add .把项目添加到仓库；
// 3、再通过git commit -m "注释内容"把项目提交到仓库；
// 4、在Github上设置好SSH密钥后，新建一个远程仓库，通过git remote add origin https://github.com/guyibang/TEST2.git将本地仓库和远程仓库进行关联；
// 5、最后通过git push -u origin master把本地仓库的项目推送到远程仓库（也就是Github）上；（若新建远程仓库的时候自动创建了README文件会报错，解决办法看上面）。


3.邮箱注册  SSH
在git bash界面输入如下内容即可完成邮箱的注册：
$ git config --global user.name "user.name"
（说明：双引号中需要你的用户名，这个可以随便输入，比如“zhangsan”）
$ git config --global user.email "yourmail@youremail.com.cn"
（说明： 双引号中需要输入你的有效邮箱，比如“12131312@qq.com”）
4.查看是否存在密钥ssh keys
cd ~/.ssh
若出现“No such file or directory”,则表示需要创建一个ssh keys。
5.如果没设置，就创建新的ssh keys，不然git不能上传文件
$ssh-keygen -t rsa -C "你的邮箱名"
$指定目录: C:\deskbook\（说明：若在此处不输入路径，而直接按回车，则ssh keys生成后存放的路径为C:\User\.ssh）
$输入密码: 123456
$确认密码: 123456
如此即可在C:\deskbook\文件夹中生成ssh keys。包括两个文件rd_rsa和id_rsa.pub
然后找到rd_rsa和id_rsa.pub所在目录打开idb_rsa.pub（可以把后缀名改成.txt),登录自己的GitHub账号，找到Settings,
进入Settings后,点击SSH and GPG keys,然后再点击右上角添加新密钥按钮New SSH key,


另外，这里有个坑需要注意一下，就是在上面第七步创建远程仓库的时候，如果你勾选了Initialize this repository with a README（就是创建仓库的时候自动给你创建一个README文件），那么到了第九步你将本地仓库内容推送到远程仓库的时候就会报一个to   https://github.com/sdc123456789/xiaobin的错
 这是由于你新创建的那个仓库里面的README文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并以下：
$ git pull --rebase origin master


git push 的时候就会忽略这个文件夹
方法一：直接在仓库根目录：执行命令
echo 'datasets'>> .gitignore
即可自动生成
方法二：、在该仓库目录下创建一个.gitignore文件
命令行进入该仓库：
touch .gitignore 就会创建该文件
用编辑器输入：
/datasets
